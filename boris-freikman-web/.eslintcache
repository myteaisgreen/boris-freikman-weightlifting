[{"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\index.js":"1","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\App.js":"2","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\reportWebVitals.js":"3","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Navbar.js":"4","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Footer.js":"5","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\auth.service.js":"6","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Login.js":"7","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Home.js":"8","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Profile.js":"9","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\user.service.js":"10","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\auth-header.js":"11","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Register.js":"12","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\ForgotPassword.js":"13","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\themes\\index.js":"14","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\ProfileListItem.js":"15","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\admin.service.js":"16","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\EditProfile.js":"17","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\boards\\UserBoard.js":"18","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\boards\\AdminBoard.js":"19","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\athletes\\Athletes.js":"20","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\athletes\\AthletesListItem.js":"21","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\Exercises.jsx":"22","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\AddExercise.jsx":"23","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\ExercisesListItem.jsx":"24","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\DeleteExerciseFormDialog.jsx":"25","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\EditExerciseFormDialog.jsx":"26","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\EditUserFromParams.jsx":"27","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\RegisterProfile.jsx":"28","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminWorkout.jsx":"29","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkout.jsx":"30","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\PickExerciseAndSets.jsx":"31","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\PercentageOfExerciseSelector.jsx":"32","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\ExerciseSelector.jsx":"33","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddSets.jsx":"34","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminActiveWorkouts.jsx":"35","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminPreviousWorkouts.jsx":"36","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\WorkoutExercises.jsx":"37","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\WorkoutsListItem.jsx":"38","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutAddExercises.jsx":"39","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutAddAthletes.jsx":"40","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutDateTimePicker.jsx":"41","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\UserCurrentWorkout.jsx":"42","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\UserPreviousWorkouts.jsx":"43"},{"size":543,"mtime":1609085838098,"results":"44","hashOfConfig":"45"},{"size":2211,"mtime":1617722098788,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":2512,"mtime":1617789807799,"results":"48","hashOfConfig":"45"},{"size":634,"mtime":1608733543040,"results":"49","hashOfConfig":"50"},{"size":924,"mtime":1617723353972,"results":"51","hashOfConfig":"45"},{"size":4832,"mtime":1617789890846,"results":"52","hashOfConfig":"45"},{"size":865,"mtime":1609835607608,"results":"53","hashOfConfig":"45"},{"size":2199,"mtime":1617785938859,"results":"54","hashOfConfig":"45"},{"size":864,"mtime":1617788899752,"results":"55","hashOfConfig":"45"},{"size":280,"mtime":1609086180805,"results":"56","hashOfConfig":"45"},{"size":5343,"mtime":1612369217265,"results":"57","hashOfConfig":"45"},{"size":1469,"mtime":1612369246618,"results":"58","hashOfConfig":"45"},{"size":182,"mtime":1611496307956,"results":"59","hashOfConfig":"45"},{"size":502,"mtime":1612369223049,"results":"60","hashOfConfig":"45"},{"size":2155,"mtime":1617785816095,"results":"61","hashOfConfig":"45"},{"size":5580,"mtime":1617724357799,"results":"62","hashOfConfig":"45"},{"size":2560,"mtime":1617789048639,"results":"63","hashOfConfig":"45"},{"size":4458,"mtime":1616662732005,"results":"64","hashOfConfig":"45"},{"size":2526,"mtime":1616334864266,"results":"65","hashOfConfig":"45"},{"size":1028,"mtime":1616071624272,"results":"66","hashOfConfig":"45"},{"size":2664,"mtime":1615987747385,"results":"67","hashOfConfig":"45"},{"size":2607,"mtime":1614081266462,"results":"68","hashOfConfig":"45"},{"size":1574,"mtime":1615987779303,"results":"69","hashOfConfig":"45"},{"size":2369,"mtime":1617785990802,"results":"70","hashOfConfig":"45"},{"size":2350,"mtime":1617785985056,"results":"71","hashOfConfig":"45"},{"size":825,"mtime":1616344626744,"results":"72","hashOfConfig":"45"},{"size":6641,"mtime":1616078130343,"results":"73","hashOfConfig":"45"},{"size":1662,"mtime":1617298109299,"results":"74","hashOfConfig":"45"},{"size":3218,"mtime":1617701894438,"results":"75","hashOfConfig":"45"},{"size":1501,"mtime":1616616667184,"results":"76","hashOfConfig":"45"},{"size":1858,"mtime":1616616625661,"results":"77","hashOfConfig":"45"},{"size":1587,"mtime":1616616626286,"results":"78","hashOfConfig":"45"},{"size":4440,"mtime":1616616627153,"results":"79","hashOfConfig":"45"},{"size":989,"mtime":1617700490794,"results":"80","hashOfConfig":"45"},{"size":1001,"mtime":1617700531128,"results":"81","hashOfConfig":"45"},{"size":1557,"mtime":1617785836608,"results":"82","hashOfConfig":"45"},{"size":942,"mtime":1617700369760,"results":"83","hashOfConfig":"45"},{"size":2040,"mtime":1617701839831,"results":"84","hashOfConfig":"45"},{"size":5610,"mtime":1617701809164,"results":"85","hashOfConfig":"45"},{"size":932,"mtime":1617785980402,"results":"86","hashOfConfig":"45"},{"size":1384,"mtime":1617702925622,"results":"87","hashOfConfig":"45"},{"size":1197,"mtime":1617789225692,"results":"88","hashOfConfig":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"n1jion",{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},"1aspael",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"91"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"91"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\index.js",[],["194","195"],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\App.js",["196","197"],"import Grid from \"@material-ui/core/Grid\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport AdminBoard from \"./components/boards/AdminBoard\";\nimport UserBoard from \"./components/boards/UserBoard\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./components/Profile\";\nimport Register from \"./components/Register\";\nimport AuthService from \"./services/auth.service\";\nimport theme from \"./themes/index\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <Router>\n          <ThemeProvider theme={theme}>\n            <Navbar\n              showAdminBoard={this.state.showAdminBoard}\n              isLoggedIn={this.state.currentUser}\n              logoutHandler={this.logOut}\n            />\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Switch>\n                <Route exact path={[\"/\", \"/home\"]} component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/forgotPassword\" component={ForgotPassword}/>\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/profile\" component={Profile} />\n                <Route path=\"/user\" component={UserBoard} />\n                <Route path=\"/admin\" component={AdminBoard} />\n              </Switch>\n            </Grid>\n          </ThemeProvider>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\reportWebVitals.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Navbar.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Footer.js",["198"],"import React from 'react'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\nfunction Footer(){\r\n    return <div>\r\n        <footer>\r\n            <div class='row'>\r\n                <a href=\"https://www.facebook.com/BarbellPoint\"><FacebookIcon></FacebookIcon></a>\r\n                <a href=\"#\"><WhatsAppIcon ></WhatsAppIcon></a>\r\n                <a href=\"https://www.instagram.com/borisfreikman/\"><InstagramIcon></InstagramIcon></a>\r\n            </div>\r\n        </footer>\r\n    </div> \r\n}\r\n\r\nexport default Footer",["199","200"],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\auth.service.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Login.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Home.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Profile.js",["201","202"],"import {\r\n  Button, Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport React from \"react\";\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport AuthService from \"../services/auth.service\";\r\nimport ProfileListItem from \"./ProfileListItem\";\r\n\r\nfunction Profile(props) {\r\n  let match = useRouteMatch();\r\n  const currentUser = props.user ? props.user : AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>\r\n          <strong>{currentUser.username}'s</strong> Profile\r\n        </h1>\r\n      </header>\r\n      <List>\r\n        {/* TODO: Return for \"debugging\" */}\r\n        {/* <ProfileListItem\r\n          title=\"Token\"\r\n          value={currentUser.accessToken.substring(0, 20)}\r\n        />\r\n        <Divider />\r\n        <ProfileListItem title=\"ID\" value={currentUser.id} />\r\n        <Divider /> */} \r\n        <ProfileListItem title=\"Email\" value={currentUser.email} />\r\n        <Divider />\r\n        <ProfileListItem title=\"First Name\" value={currentUser.firstName}/>\r\n        <Divider />\r\n        <ProfileListItem title=\"Last Name\" value={currentUser.lastName}/>\r\n        <Divider />\r\n        <ProfileListItem title=\"Weight\" value={currentUser.weight}/>\r\n        <Divider />\r\n        <ProfileListItem title=\"Snatch Record\" value={currentUser.snatchRecord}/>\r\n        <Divider />\r\n        <ProfileListItem title=\"Clean&Jerk Record\" value={currentUser.cleanJerkRecord}/>\r\n        <Divider />\r\n        {/* <ListItem>\r\n          <ListItemText>\r\n            <strong>Authorities: </strong>\r\n            <ul>\r\n              {currentUser.roles &&\r\n                currentUser.roles.map((role, index) => (\r\n                  <li key={index}>{role}</li>\r\n                ))}\r\n            </ul>\r\n          </ListItemText>\r\n        </ListItem> */}\r\n        <Divider />\r\n      </List>\r\n      <Button\r\n        fullWidth={true}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<EditOutlinedIcon />}\r\n        component={Link} to={`${match.url}/editProfile`} \r\n      >\r\n        Edit Profile\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\user.service.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\auth-header.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\Register.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\ForgotPassword.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\themes\\index.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\ProfileListItem.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\services\\admin.service.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\EditProfile.js",["203"],"import { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport AdminService from \"../services/admin.service\";\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string(\"Enter username\").required(\"Required\"),\r\n  email: yup\r\n    .string(\"Enter email\")\r\n    .email(\"Must be a valid email address\")\r\n    .required(\"Required!\"),\r\n  firstName: yup\r\n    .string(\"Enter First Name\")\r\n    .matches(/^[A-Za-z]+$/, \"First name should only contain english letters\")\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string(\"Enter Last Name\")\r\n    .matches(/^[A-Za-z]+$/, \"Last name should only contain english letters\")\r\n    .required(\"Required\"),\r\n  weight: yup\r\n    .number(\"Enter current body weight\")\r\n    .positive(\"Weight can only be positive, duh\")\r\n    .integer(\"Weight should be an integer\")\r\n    .lessThan(200, \"I think we are exaggerating...\"),\r\n  snatchRecord: yup\r\n    .number(\"Enter current Snatch record\")\r\n    .positive()\r\n    .integer(\"Snatch record should be an integer\")\r\n    .lessThan(200, \"I think we are exaggerating...\"),\r\n  cleanJerkRecord: yup\r\n    .number(\"Enter current Clean&Jerk record\")\r\n    .positive()\r\n    .integer(\"Clean&Jerk record should be an integer\")\r\n    .lessThan(250, \"I think we are exaggerating...\"),\r\n});\r\n\r\nfunction EditProfile({user}) {\r\n  const [isUpdatingProfile, setIsUpdatingProfile] = useState(false); // TODO: Use for conditional rendering\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: user.username || \"\",\r\n      email: user.email || \"\",\r\n      firstName: user.firstName || \"\",\r\n      lastName: user.lastName || \"\",\r\n      weight: user.weight || \"\",\r\n      snatchRecord: user.snatchRecord || \"\",\r\n      cleanJerkRecord: user.cleanJerkRecord || \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: () => {\r\n      updateProfile();\r\n    },\r\n  });\r\n\r\n  const updateProfile = useCallback(async () => {\r\n    setIsUpdatingProfile(true);\r\n    // alert(JSON.stringify({_id: user._id, ...formik.values}, null, 2)); // TODO: REMOVE\r\n    const response = await AdminService.updateUserById({...formik.values, _id: user._id});\r\n    formik.resetForm(); // TODO: Leave? Remove?\r\n    alert(JSON.stringify(response, null, 2));\r\n    setIsUpdatingProfile(false);\r\n  }, [formik.values, isUpdatingProfile, user]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <h1>Edit Profile</h1>\r\n        <TextField\r\n          fullWidth\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          value={formik.values.firstName}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.firstName && Boolean(formik.errors.firstName)\r\n          }\r\n          helperText={formik.touched.firstName && formik.errors.firstName}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          value={formik.values.lastName}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.lastName && Boolean(formik.errors.lastName)\r\n          }\r\n          helperText={formik.touched.lastName && formik.errors.lastName}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"weight\"\r\n          name=\"weight\"\r\n          label=\"Weight\"\r\n          value={formik.values.weight}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.weight && Boolean(formik.errors.weight)\r\n          }\r\n          helperText={formik.touched.weight && formik.errors.weight}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"snatchRecord\"\r\n          name=\"snatchRecord\"\r\n          label=\"Snatch Record\"\r\n          value={formik.values.snatchRecord}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.snatchRecord && Boolean(formik.errors.snatchRecord)\r\n          }\r\n          helperText={formik.touched.snatchRecord && formik.errors.snatchRecord}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"cleanJerkRecord\"\r\n          name=\"cleanJerkRecord\"\r\n          label=\"Clean&Jerk Record\"\r\n          value={formik.values.cleanJerkRecord}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.cleanJerkRecord && Boolean(formik.errors.cleanJerkRecord)\r\n          }\r\n          helperText={formik.touched.cleanJerkRecord && formik.errors.cleanJerkRecord}\r\n        />\r\n        <Divider/>\r\n        {isUpdatingProfile ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            startIcon={<SendIcon />}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\boards\\UserBoard.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\boards\\AdminBoard.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\athletes\\Athletes.js",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\athletes\\AthletesListItem.js",["204"],"import { Fab, Paper } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AthletesListItem(props) {\r\n  const name = props.firstName + \" \" + props.lastName;\r\n  const pathForEditing = `/admin/athletes/editProfile/${props.id}`\r\n\r\n  return (\r\n    <div>\r\n      <li key={props.uniqueKey}>\r\n        <Paper variant=\"outlined\" color=\"primary\" elevation={3}>\r\n          <h2>{name}</h2>\r\n          <h4>\r\n            Snatch: {props.snatchRecord}, CJ: {props.cleanJerkRecord} @{\" \"}\r\n            {props.weight}KG\r\n          </h4>\r\n          <Fab color=\"secondary\" aria-label=\"edit\">\r\n            <Link to={pathForEditing}>\r\n              <EditIcon />\r\n            </Link>\r\n          </Fab>\r\n          {/* <Fab color=\"primary\" aria-label=\"edit\">\r\n            <DeleteIcon/>\r\n          </Fab> */}\r\n        </Paper>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AthletesListItem;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\Exercises.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\AddExercise.jsx",["205"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport AdminService from \"../../services/admin.service\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string(\"Enter the name of the exercise\")\r\n    .required(\"Name is required\"),\r\n  description: yup.string(\"Enter your password\"),\r\n});\r\n\r\nfunction AddExercise() {\r\n  const [isSubmittingNewExercise, setIsSubmittingNewExercise] = useState(false); // TODO: Use for conditional rendering\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      description: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: () => {\r\n      submitNewExercise();\r\n    },\r\n  });\r\n\r\n  const submitNewExercise = useCallback(async () => {\r\n    setIsSubmittingNewExercise(true);\r\n    const response = await AdminService.addExercise(\r\n      formik.values.name,\r\n      formik.values.description\r\n    );\r\n    formik.resetForm();\r\n    alert(JSON.stringify(response, null, 2));\r\n    setIsSubmittingNewExercise(false);\r\n  }, [formik.values, isSubmittingNewExercise]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <h1>Add New Exercise</h1>\r\n        <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={formik.touched.name && formik.errors.name}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"description\"\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          type=\"description\"\r\n          value={formik.values.description}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.description && Boolean(formik.errors.description)\r\n          }\r\n          helperText={formik.touched.description && formik.errors.description}\r\n        />\r\n        {isSubmittingNewExercise ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            startIcon={<SendIcon />}\r\n          >\r\n            Submit New Exercise\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddExercise;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\ExercisesListItem.jsx",["206"],"import React, { useState } from \"react\";\r\nimport { Fab, Paper } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteExerciseFormDialog from \"./DeleteExerciseFormDialog\";\r\nimport EditExerciseFormDialog from \"./EditExerciseFormDialog\";\r\n\r\nfunction ExercisesListItem({\r\n  name,\r\n  description,\r\n  deleteFromExercisesByName,\r\n  editDescriptionByName\r\n}) {\r\n  const [openDeleteExercise, setOpenDeleteExercise] = useState(false);\r\n  const [openEditExercise, setOpenEditExercise] = useState(false);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n      <div>\r\n        <h3>{name}</h3>\r\n        <h6>{description}</h6>\r\n      </div>\r\n\r\n      <div>\r\n        <Fab\r\n          onClick={(e) => setOpenEditExercise(!openEditExercise)}\r\n          color=\"secondary\"\r\n          aria-label=\"edit\"\r\n        >\r\n          <EditIcon />\r\n        </Fab>\r\n        <Fab\r\n          onClick={(e) => setOpenDeleteExercise(!openDeleteExercise)}\r\n          color=\"primary\"\r\n          aria-label=\"edit\"\r\n        >\r\n          <DeleteIcon />\r\n        </Fab>\r\n      </div>\r\n\r\n      <DeleteExerciseFormDialog\r\n        name={name}\r\n        openDialog={openDeleteExercise}\r\n        deleteFromExercisesByName={deleteFromExercisesByName}\r\n      />\r\n      <EditExerciseFormDialog\r\n        name={name}\r\n        description={description}\r\n        openDialog={openEditExercise}\r\n        editDescriptionByName={editDescriptionByName}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExercisesListItem;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\DeleteExerciseFormDialog.jsx",["207","208"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AdminService from '../../services/admin.service';\r\n\r\nexport default function DeleteExerciseFormDialog({name, openDialog, deleteFromExercisesByName}) {\r\n    const [open, setOpen] = useState(false);\r\n    const [typedValue, setTypedValue] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setOpen(openDialog);\r\n    }, [openDialog])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDeleteExercise = (name) => {\r\n        let response = AdminService.deleteExercise(name);\r\n        deleteFromExercisesByName(name);\r\n        setOpen(false);\r\n    }\r\n\r\n    const shouldBeDisabled = () => {\r\n        return typedValue.localeCompare(name) ? true : false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Delete Exercise</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Are you <b>sure</b> you want to delete this exercise?\r\n                Type <b>{name}</b> below:\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Exercise name\"\r\n                fullWidth\r\n                onChange={e => setTypedValue(e.target.value)}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button disabled={shouldBeDisabled()}  \r\n                onClick={e => {handleDeleteExercise(name)}} \r\n                color=\"primary\"\r\n                to={\"/admin/exercises\"}>\r\n                Delete Exercise\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\exercises\\EditExerciseFormDialog.jsx",["209","210","211"],"import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AdminService from '../../services/admin.service';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function EditExerciseFormDialog({name, description, openDialog, editDescriptionByName}) {\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [typedValue, setTypedValue] = useState(\"\");\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setOpen(openDialog);\r\n    }, [openDialog])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleEditExercise = (name) => {\r\n        let updatedDescription = typedValue;\r\n        let response = AdminService.updateExercise(name, updatedDescription);\r\n        editDescriptionByName(name, updatedDescription);\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Edit Exercise</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Enter a new, clearer description of the exercise:\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"description\"\r\n                defaultValue={description}\r\n                fullWidth\r\n                onChange={e => setTypedValue(e.target.value)}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button \r\n                onClick={e => {handleEditExercise(name)}} \r\n                color=\"primary\"\r\n                to={\"/admin/exercises\"}>\r\n                Submit\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\EditUserFromParams.jsx",["212"],"import React, { useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport AdminService from '../services/admin.service';\r\nimport EditProfile from './EditProfile';\r\n\r\nfunction EditUserFromParams() {\r\n    let {id} = useParams();\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    \r\n    async function getUserFromDbByParams(){\r\n        let userFromDb = await AdminService.getUserById(id);\r\n        setUser(userFromDb);\r\n        setIsLoading(false);\r\n    } \r\n\r\n    useEffect(() => {\r\n        getUserFromDbByParams();\r\n    }, [id]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? \r\n            <h1>Loading, please wait</h1> : \r\n            <EditProfile user={user}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUserFromParams;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\RegisterProfile.jsx",["213"],"import { CircularProgress, Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport * as yup from \"yup\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string(\"Enter username\").required(\"Required\"),\r\n  password: yup\r\n    .string(\"Enter password\")\r\n    .min(8, \"Password is too short - 8 characters atleast\")\r\n    .matches(/[a-zA-z0-9]/, \"Password should only contain latin letters or numbers\")\r\n    .required(\"Required\"),\r\n  email: yup\r\n    .string(\"Enter email\")\r\n    .email(\"Must be a valid email address\")\r\n    .required(\"Required!\"),\r\n  firstName: yup\r\n    .string(\"Enter First Name\")\r\n    .matches(/^[A-Za-z]+$/, \"First name should only contain english letters\")\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string(\"Enter Last Name\")\r\n    .matches(/^[A-Za-z]+$/, \"Last name should only contain english letters\")\r\n    .required(\"Required\"),\r\n  weight: yup\r\n    .number(\"Enter current body weight\")\r\n    .positive(\"Weight can only be positive, duh\")\r\n    .integer(\"Weight should be an integer\")\r\n    .lessThan(200, \"I think we are exaggerating...\"),\r\n  snatchRecord: yup\r\n    .number(\"Enter current Snatch record\")\r\n    .positive()\r\n    .integer(\"Snatch record should be an integer\")\r\n    .lessThan(200, \"I think we are exaggerating...\"),\r\n  cleanJerkRecord: yup\r\n    .number(\"Enter current Clean&Jerk record\")\r\n    .positive()\r\n    .integer(\"Clean&Jerk record should be an integer\")\r\n    .lessThan(250, \"I think we are exaggerating...\"),\r\n});\r\n\r\nfunction RegisterProfile() {\r\n  const [isRegisteringProfile, setIsRegisteringProfile] = useState(false); // TODO: Use for conditional rendering\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      weight: \"\",\r\n      snatchRecord: \"\",\r\n      cleanJerkRecord: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: () => {\r\n      registerProfile();\r\n    },\r\n  });\r\n\r\n  const registerProfile = useCallback(async () => {\r\n    setIsRegisteringProfile(true);\r\n    const response = await AuthService.register(\r\n        formik.values.username,\r\n        formik.values.email,\r\n        formik.values.password,\r\n        formik.values.firstName,\r\n        formik.values.lastName,\r\n        formik.values.weight,\r\n        formik.values.snatchRecord, \r\n        formik.values.cleanJerkRecord\r\n        );\r\n    formik.resetForm(); // TODO: Leave? Remove?\r\n    alert(JSON.stringify(response, null, 2));\r\n    setIsRegisteringProfile(false);\r\n  }, [formik, isRegisteringProfile]);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <h1>Register Profile</h1>\r\n        <TextField\r\n          fullWidth\r\n          id=\"username\"\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          value={formik.values.username}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.username && Boolean(formik.errors.username)}\r\n          helperText={formik.touched.username && formik.errors.username}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          value={formik.values.firstName}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.firstName && Boolean(formik.errors.firstName)\r\n          }\r\n          helperText={formik.touched.firstName && formik.errors.firstName}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          value={formik.values.lastName}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.lastName && Boolean(formik.errors.lastName)\r\n          }\r\n          helperText={formik.touched.lastName && formik.errors.lastName}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"weight\"\r\n          name=\"weight\"\r\n          label=\"Weight\"\r\n          value={formik.values.weight}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.weight && Boolean(formik.errors.weight)\r\n          }\r\n          helperText={formik.touched.weight && formik.errors.weight}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"snatchRecord\"\r\n          name=\"snatchRecord\"\r\n          label=\"Snatch Record\"\r\n          value={formik.values.snatchRecord}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.snatchRecord && Boolean(formik.errors.snatchRecord)\r\n          }\r\n          helperText={formik.touched.snatchRecord && formik.errors.snatchRecord}\r\n        />\r\n        <Divider/>\r\n        <TextField\r\n          fullWidth\r\n          id=\"cleanJerkRecord\"\r\n          name=\"cleanJerkRecord\"\r\n          label=\"Clean&Jerk Record\"\r\n          value={formik.values.cleanJerkRecord}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.cleanJerkRecord && Boolean(formik.errors.cleanJerkRecord)\r\n          }\r\n          helperText={formik.touched.cleanJerkRecord && formik.errors.cleanJerkRecord}\r\n        />\r\n        <Divider/>\r\n        {isRegisteringProfile ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            startIcon={<SendIcon />}\r\n          >\r\n            Register Profile\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterProfile;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminWorkout.jsx",["214"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AdminService from \"../../services/admin.service\";\r\nimport WorkoutExercises from './WorkoutExercises';\r\n\r\nfunction AdminWorkout() {\r\n  let { id } = useParams();\r\n  const [workout, setWorkout] = useState();\r\n  const [dateAndTime, setDateAndTime] = useState();\r\n\r\n  const setWhen = (dateAndTime) => {\r\n    let date = new Date(Date.parse(dateAndTime));\r\n    let dateOptions = {\r\n      hour12: false,\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    };\r\n    setDateAndTime(date.toLocaleString(\"en-IL\", dateOptions));\r\n  };\r\n\r\n  const fetchWorkout = useCallback(async () => {\r\n    const workout = await AdminService.getAdminWorkoutById(id);\r\n    setWorkout(workout);\r\n    setWhen(workout.dateAndTime);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchWorkout();\r\n  }, [fetchWorkout]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>When?</h1>\r\n      <h3>{dateAndTime}</h3>\r\n      <h1>Who?</h1>\r\n      <ul>\r\n        {workout &&\r\n          workout.athletes &&\r\n          workout.athletes.map((athleteObj, index) => {\r\n            let athlete = athleteObj.athlete;\r\n            return (\r\n              <li key={athlete._id}>\r\n                <h3>\r\n                  {athlete.firstName} {athlete.lastName}\r\n                </h3>\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      <h1>What?</h1>\r\n      <ol>\r\n        {workout && workout.exercises && <WorkoutExercises exercises={workout.exercises}/>}\r\n      </ol>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminWorkout;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkout.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\PickExerciseAndSets.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\PercentageOfExerciseSelector.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\ExerciseSelector.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddSets.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminActiveWorkouts.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AdminPreviousWorkouts.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\WorkoutExercises.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\WorkoutsListItem.jsx",["215"],"import { Paper, Fab } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WorkoutsListItem({ dateAndTime, id }) {\r\n  const [when, setWhen] = useState();\r\n  useEffect(() => {\r\n    let date = new Date(Date.parse(dateAndTime));\r\n    let dateOptions = {\r\n      hour12: false,\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    };\r\n    setWhen(date.toLocaleString(\"en-IL\", dateOptions));\r\n  });\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <h3>{when}</h3>\r\n        {/* <h5>{id}</h5> */}\r\n\r\n        <Fab color=\"secondary\" aria-label=\"edit\">\r\n          <Link to={`/admin/workout/${id}`}>\r\n            <VisibilityIcon />\r\n          </Link>\r\n        </Fab>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkoutsListItem;\r\n","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutAddExercises.jsx",["216"],"import { Button, Paper } from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport AdminService from \"../../services/admin.service\";\r\nimport { ErrorMessage } from 'formik';\r\nimport PickExerciseAndSets from \"./PickExerciseAndSets\";\r\n\r\nfunction AddWorkoutAddExercises({form, ...arrayHelpers}) {\r\n  const [exercisesFromDB, setExercisesFromDB] = useState(\"\");\r\n  \r\n  const fetchExercises = useCallback(async () => {\r\n    const exercisesFromDB = await AdminService.getAllExercises();\r\n    setExercisesFromDB(exercisesFromDB);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchExercises();\r\n  }, [fetchExercises]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>Pick the exercises:</h3>\r\n          {form.values.exercises && \r\n            form.values.exercises.map((selectedExercise, index) => (selectedExercise.order = index)) &&\r\n            form.values.exercises.map((selectedExercise, index) => (\r\n              <div key={selectedExercise.order}>\r\n                <Paper elevation={3}>\r\n                  <PickExerciseAndSets\r\n                    form={form}\r\n                    indexInExercises={index}\r\n                    exercisesToChooseFrom={exercisesFromDB}\r\n                  />\r\n                </Paper>\r\n                <Button\r\n                color=\"secondary\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                onClick={() => {arrayHelpers.remove(index)}}\r\n              >\r\n                Remove Exercise\r\n              </Button>\r\n              </div>\r\n            ))}\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={() => {\r\n              arrayHelpers.push({\r\n                order: \"\",\r\n                exercise: \"\",\r\n                percentageOfExercise: \"\",\r\n                sets: [],\r\n                notes: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Add New Exercise\r\n          </Button>\r\n          </div>\r\n          )\r\n}\r\n\r\nexport default AddWorkoutAddExercises;","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutAddAthletes.jsx",["217","218"],"import Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ErrorMessage } from 'formik';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport AdminService from '../../services/admin.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function AddWorkoutAddAthletes({form: {setFieldValue, setFieldTouched}}) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState([]);\r\n  const [left, setLeft] = useState([]); // For athletes NOT to be signed to the workout\r\n  const [right, setRight] = useState([]);\r\n  \r\n  const fetchAthletes = useCallback(async () => {\r\n    const usersForAdminBoard = await AdminService.getAllUsersForAdminBoard();\r\n    setLeft(usersForAdminBoard);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAthletes();\r\n  }, [fetchAthletes]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const createAthletesArray = (athletes) => {\r\n    return athletes.map((athlete, index) => \r\n    athlete = {\r\n      athlete: athlete._id,\r\n      snatchRecord: athlete.snatchRecord, \r\n      cleanJerkRecord: athlete.cleanJerkRecord,\r\n    }\r\n    );\r\n  }; \r\n\r\n  useEffect(() => {\r\n    setFieldValue(\"athletes\", createAthletesArray(right));\r\n  }, [right])\r\n\r\n  useEffect(() => {\r\n    setFieldTouched(\"athletes\", true);\r\n  }, [])\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (athletes) => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {athletes.map((athlete) => {\r\n          const labelId = `transfer-list-item-${athlete}-label`;\r\n\r\n          return (\r\n            <ListItem key={athlete._id} role=\"listitem\" button onClick={handleToggle(athlete)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(athlete) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`${athlete.firstName} ${athlete.lastName}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n        <h3>Pick the athletes:</h3>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n          <Grid item>{customList(left)}</Grid>\r\n          <Grid item>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                onClick={handleAllRight}\r\n                disabled={left.length === 0}\r\n                aria-label=\"move all right\"\r\n              >\r\n                ≫\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                onClick={handleCheckedRight}\r\n                disabled={leftChecked.length === 0}\r\n                aria-label=\"move selected right\"\r\n              >\r\n                &gt;\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                onClick={handleCheckedLeft}\r\n                disabled={rightChecked.length === 0}\r\n                aria-label=\"move selected left\"\r\n              >\r\n                &lt;\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                className={classes.button}\r\n                onClick={handleAllLeft}\r\n                disabled={right.length === 0}\r\n                aria-label=\"move all left\"\r\n              >\r\n                ≪\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>{customList(right)}</Grid>\r\n        </Grid>\r\n        <ErrorMessage name=\"athletes\"/>\r\n    </div>\r\n  );\r\n}","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\AddWorkoutDateTimePicker.jsx",[],"D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\UserCurrentWorkout.jsx",["219"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport WorkoutExercises from './WorkoutExercises';\r\n\r\nfunction UserCurrentWorkout() {\r\n  let { id } = useParams();\r\n  const [workout, setWorkout] = useState();\r\n  const [dateAndTime, setDateAndTime] = useState();\r\n\r\n  const setWhen = (dateAndTime) => {\r\n    let date = new Date(Date.parse(dateAndTime));\r\n    let dateOptions = {\r\n      hour12: false,\r\n      year: \"numeric\",\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    };\r\n    setDateAndTime(date.toLocaleString(\"en-IL\", dateOptions));\r\n  };\r\n\r\n  const fetchWorkout = useCallback(async () => {\r\n    const currentUser = await AuthService.getCurrentUser();\r\n    const workout = await UserService.getUserCurrentWorkout(currentUser._id);\r\n    setWorkout(workout);\r\n    setWhen(workout.dateAndTime);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchWorkout();\r\n  }, [fetchWorkout]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>When?</h1>\r\n      <h3>{dateAndTime}</h3>\r\n      <h1>What?</h1>\r\n      <ol>\r\n        {workout && workout.exercises && <WorkoutExercises exercises={workout.exercises}/>}\r\n      </ol>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCurrentWorkout;","D:\\Nikita Ilyasov\\Programming\\boris-freikman\\boris-freikman-web\\src\\components\\workouts\\UserPreviousWorkouts.jsx",["220"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport AdminService from \"../../services/admin.service\";\r\nimport WorkoutsListItem from './WorkoutsListItem';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nfunction UserPreviousWorkouts() {\r\n  const [workouts, setWorkouts] = useState();\r\n\r\n  const fetchAllPreviousWorkouts = useCallback(async () => {\r\n    const currentUser = await AuthService.getCurrentUser();\r\n    const workouts = await UserService.getUserPreviousWorkouts(currentUser._id);\r\n    if(workouts.length > 0){\r\n        setWorkouts(workouts);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAllPreviousWorkouts();\r\n  }, [fetchAllPreviousWorkouts]);\r\n\r\n  return (\r\n    <div>\r\n        {workouts ? \r\n        <h1>These are all the previous workouts</h1> \r\n    : <h1>There are no previous workouts at the time</h1>}\r\n      {workouts &&\r\n        workouts.map((workout, index) => (\r\n          <WorkoutsListItem \r\n          key={workout._id}\r\n          dateAndTime={workout.dateAndTime} \r\n          id={workout._id}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPreviousWorkouts;\r\n",{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":45,"column":13,"nodeType":"227","messageId":"228","endLine":45,"endColumn":24},{"ruleId":"225","severity":1,"message":"229","line":45,"column":26,"nodeType":"227","messageId":"228","endLine":45,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":11,"column":17,"nodeType":"232","endLine":11,"endColumn":29},{"ruleId":"221","replacedBy":"233"},{"ruleId":"223","replacedBy":"234"},{"ruleId":"225","severity":1,"message":"235","line":4,"column":3,"nodeType":"227","messageId":"228","endLine":4,"endColumn":11},{"ruleId":"225","severity":1,"message":"236","line":5,"column":3,"nodeType":"227","messageId":"228","endLine":5,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":67,"column":6,"nodeType":"239","endLine":67,"endColumn":46,"suggestions":"240"},{"ruleId":"225","severity":1,"message":"241","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":40,"column":6,"nodeType":"239","endLine":40,"endColumn":46,"suggestions":"242"},{"ruleId":"225","severity":1,"message":"243","line":2,"column":15,"nodeType":"227","messageId":"228","endLine":2,"endColumn":20},{"ruleId":"225","severity":1,"message":"244","line":15,"column":11,"nodeType":"227","messageId":"228","endLine":15,"endColumn":26},{"ruleId":"225","severity":1,"message":"245","line":28,"column":13,"nodeType":"227","messageId":"228","endLine":28,"endColumn":21},{"ruleId":"225","severity":1,"message":"246","line":13,"column":11,"nodeType":"227","messageId":"228","endLine":13,"endColumn":18},{"ruleId":"225","severity":1,"message":"244","line":17,"column":11,"nodeType":"227","messageId":"228","endLine":17,"endColumn":26},{"ruleId":"225","severity":1,"message":"245","line":31,"column":13,"nodeType":"227","messageId":"228","endLine":31,"endColumn":21},{"ruleId":"237","severity":1,"message":"247","line":19,"column":8,"nodeType":"239","endLine":19,"endColumn":12,"suggestions":"248"},{"ruleId":"237","severity":1,"message":"249","line":81,"column":6,"nodeType":"239","endLine":81,"endColumn":36,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"251","line":28,"column":6,"nodeType":"239","endLine":28,"endColumn":8,"suggestions":"252"},{"ruleId":"237","severity":1,"message":"253","line":8,"column":3,"nodeType":"227","endLine":8,"endColumn":12,"suggestions":"254"},{"ruleId":"225","severity":1,"message":"255","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":22},{"ruleId":"237","severity":1,"message":"256","line":79,"column":6,"nodeType":"239","endLine":79,"endColumn":13,"suggestions":"257"},{"ruleId":"237","severity":1,"message":"258","line":83,"column":6,"nodeType":"239","endLine":83,"endColumn":8,"suggestions":"259"},{"ruleId":"225","severity":1,"message":"260","line":8,"column":9,"nodeType":"227","messageId":"228","endLine":8,"endColumn":11},{"ruleId":"225","severity":1,"message":"261","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":20},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'showAdminBoard' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["262"],["263"],"'ListItem' is defined but never used.","'ListItemText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'formik'. Either include it or remove the dependency array.","ArrayExpression",["264"],"'DeleteIcon' is defined but never used.",["265"],"'Paper' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'response' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserFromDbByParams'. Either include it or remove the dependency array.",["266"],"React Hook useCallback has an unnecessary dependency: 'isRegisteringProfile'. Either exclude it or remove the dependency array.",["267"],"React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.",["268"],"React Hook useEffect contains a call to 'setWhen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dateAndTime] as a second argument to the useEffect Hook.",["269"],"'ErrorMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'setFieldValue'. Either include it or remove the dependency array. If 'setFieldValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],"React Hook useEffect has a missing dependency: 'setFieldTouched'. Either include it or remove the dependency array. If 'setFieldTouched' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"'id' is assigned a value but never used.","'AdminService' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"274","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [formik, user._id]",{"range":"287","text":"288"},"Update the dependencies array to be: [formik]",{"range":"289","text":"290"},"Update the dependencies array to be: [getUserFromDbByParams, id]",{"range":"291","text":"292"},{"range":"293","text":"290"},"Update the dependencies array to be: [id]",{"range":"294","text":"295"},"Add dependencies array: [dateAndTime]",{"range":"296","text":"297"},"Update the dependencies array to be: [right, setFieldValue]",{"range":"298","text":"299"},"Update the dependencies array to be: [setFieldTouched]",{"range":"300","text":"301"},[2521,2561],"[formik, user._id]",[1272,1312],"[formik]",[602,606],"[getUserFromDbByParams, id]",[2801,2831],[900,902],"[id]",[605,605],", [dateAndTime]",[2325,2332],"[right, setFieldValue]",[2403,2405],"[setFieldTouched]"]